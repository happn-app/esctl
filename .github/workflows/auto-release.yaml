name: Auto Releases

on:
  push:
    branches:
      - master
    paths:
      - './.github/workflows/auto-release.yaml'
      - 'pyproject.toml'

jobs:
  release:
    runs-on: [self-hosted, infra]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-tags: true
          fetch-depth: 0

      - name: üèó Set up yq
        uses: frenck/action-setup-yq@v1.0.2

      - name: Check pyproject.toml version is higher than latest git tag
        id: check
        shell: bash
        run: |
          # Shamelessly copied from
          # https://stackoverflow.com/questions/4023830/how-to-compare-two-strings-in-dot-separated-version-format-in-bash
          # Adapted to echo the result, and not return it as exit code (cause it breaks the step)
          vercomp () {
              if [[ $1 == $2 ]]
              then
                  echo "0"
                  return 0
              fi
              local IFS=.
              local i ver1=($1) ver2=($2)
              # fill empty fields in ver1 with zeros
              for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
              do
                  ver1[i]=0
              done
              for ((i=0; i<${#ver1[@]}; i++))
              do
                  if ((10#${ver1[i]:=0} > 10#${ver2[i]:=0}))
                  then
                      echo ">"
                      return 0
                  fi
                  if ((10#${ver1[i]} < 10#${ver2[i]}))
                  then
                      echo "<"
                      return 0
                  fi
              done
              return 0
          }
          version=$(yq -r '.tool.poetry.version' pyproject.toml)
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) | cut -c2-)
          changes=$(git log v$latest_tag..HEAD --pretty=format:'- %s (%an)' | sed 's/-/  -/')
          echo "Current version: $version"
          echo "Latest tag: $latest_tag"
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT
          echo 'changes<<EOF' >> $GITHUB_OUTPUT
          echo $changes >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
          echo "Checking if $version > $latest_tag"
          if [[ $(vercomp $version $latest_tag) == '>' ]]; then
            echo "New version to release"
            echo "skip=0" >> $GITHUB_OUTPUT
          else
            echo "No new version to release"
            echo "skip=1" >> $GITHUB_OUTPUT
          fi
          exit 0

      - name: Create new GitHub Release
        if: steps.check.outputs.skip == '0'
        uses: ncipollo/release-action@v1.20.0
        with:
          tag: v${{ steps.check.outputs.version }}
          name: v${{ steps.check.outputs.version }}
          commit: ${{ github.sha }}
          body: |
            ## Changes since ${{ steps.check.outputs.latest_tag }}
            ${{ steps.check.outputs.latest_tag }}...${{ steps.check.outputs.version }}
            ${{ steps.check.outputs.changes }}
          draft: false
          prerelease: false
